{"version":3,"sources":["components/Form/Form.jsx","components/TodoList/TodoList.jsx","components/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Form","state","query","select","handleInputChange","event","target","name","value","props","todos","saveTodos","userId","setState","filteredTodos","filter","todo","title","toLowerCase","includes","completed","this","className","type","placeholder","onChange","React","Component","defaultProps","TodoList","selectUser","map","key","id","readOnly","checked","onClick","request","url","fetch","then","response","ok","Error","status","statusText","json","getUsers","data","getTodos","a","users","getAllTodos","length","CurrentUser","user","loadUserData","prevProps","email","phone","resetUser","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d12b39f1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Form extends React.Component {\n  state = {\n    query: '',\n    select: '',\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const { todos, saveTodos, userId } = this.props;\n    const { query } = this.state;\n\n    this.setState({\n      [name]: value,\n    });\n\n    let filteredTodos = todos.filter(todo => todo.title.toLowerCase()\n      .includes(query.toLowerCase()));\n\n    switch (value) {\n      case 'Active':\n        filteredTodos = filteredTodos.filter(todo => !todo.completed);\n        break;\n      case 'Completed':\n        filteredTodos = filteredTodos.filter(todo => todo.completed);\n        break;\n      case 'By userId':\n        if (!userId) {\n          return;\n        }\n\n        filteredTodos = filteredTodos.filter(\n          todo => todo.userId === userId,\n        );\n        break;\n      default:\n        break;\n    }\n\n    saveTodos(filteredTodos);\n  }\n\n  render() {\n    const { query, select } = this.state;\n\n    return (\n      <form>\n        <input\n          className=\"form__input form\"\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"find title...\"\n          value={query}\n          onChange={this.handleInputChange}\n        />\n\n        <select\n          onChange={this.handleInputChange}\n          name=\"select\"\n          value={select}\n        >\n          <option value=\"All\">\n            All\n          </option>\n          <option value=\"Active\">\n            Active\n          </option>\n          <option value=\"Completed\">\n            Completed\n          </option>\n          <option value=\"By userId\">\n            This user only(choose a user and try)\n          </option>\n        </select>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool,\n    }).isRequired,\n  ),\n  saveTodos: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n\nForm.defaultProps = {\n  todos: [],\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport { Form } from '../Form';\n\nexport class TodoList extends React.Component {\n  state = {\n    filteredTodos: this.props.todos,\n  }\n\n  saveTodos = (todos) => {\n    this.setState({\n      filteredTodos: todos,\n    });\n  }\n\n  render() {\n    const { selectUser, todos } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <Form\n          todos={todos}\n          saveTodos={this.saveTodos}\n          userId={this.props.userId}\n        />\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {this.state.filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={`TodoList__item ${todo.completed === true\n                  ? 'TodoList__item--checked'\n                  : 'TodoList__item--unchecked'}`}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={`${todo.completed === true\n                      ? 'checked'\n                      : ''}`}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"TodoList__user-button button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  selectUser: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool,\n    }).isRequired,\n  ),\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}/${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n\nexport const getUsers = () => request('users')\n  .then(response => response.data);\n\nexport async function getTodos() {\n  const users = await getUsers();\n  const todos = await getAllTodos();\n  const filteredTodos = todos.filter(todo => todo.title && (\n    todo.userId && todo.userId <= users.length && todo.userId !== 0));\n\n  return filteredTodos;\n}\n\nconst getAllTodos = () => request('todos')\n  .then(response => response.data);\n\nexport const getUser = userId => request(`users/${userId}`)\n  .then(response => response.data);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadUserData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUserData();\n    }\n  }\n\n  async loadUserData() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (!user) {\n      return <div />;\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {' '}\n            {user.id}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"CurrentUser__button\"\n          onClick={this.props.resetUser}\n        >\n          Clear\n        </button>\n      </div>\n\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  resetUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './components/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  resetUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length > 0 && (\n            <>\n              <TodoList\n                todos={todos}\n                selectUser={this.selectUser}\n                userId={selectedUserId}\n              />\n            </>\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                resetUser={this.resetUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}